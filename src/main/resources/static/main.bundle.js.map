{"version":3,"sources":["/Users/nils.lamot/Projects/AE/2017-google-cloud/moodboard-front/src/$_lazy_route_resource lazy","/Users/nils.lamot/Projects/AE/2017-google-cloud/moodboard-front/src/app/app.component.css","/Users/nils.lamot/Projects/AE/2017-google-cloud/moodboard-front/src/app/app.component.html","/Users/nils.lamot/Projects/AE/2017-google-cloud/moodboard-front/src/app/app.component.ts","/Users/nils.lamot/Projects/AE/2017-google-cloud/moodboard-front/src/app/app.module.ts","/Users/nils.lamot/Projects/AE/2017-google-cloud/moodboard-front/src/environments/environment.ts","/Users/nils.lamot/Projects/AE/2017-google-cloud/moodboard-front/src/main.ts"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,yF;;;;;;;ACVA;AACA;;;AAGA;AACA,gCAAiC,iBAAiB,qBAAqB,sBAAsB,uBAAuB,WAAW,cAAc,gBAAgB,yBAAyB,yBAAyB,kBAAkB,6BAA6B,8BAA8B,oCAAoC,qDAAqD,+BAA+B,gCAAgC,wBAAwB,WAAW,8BAA8B,GAAG,UAAU,8BAA8B,GAAG,SAAS,8BAA8B,GAAG,OAAO,8BAA8B,GAAG,SAAS,8BAA8B,GAAG,QAAQ,8BAA8B,GAAG,aAAa,8BAA8B,GAAG,YAAY,8BAA8B,GAAG;;AAEnyB;;;AAGA;AACA,2C;;;;;;;ACXA,yDAAyD,8aAA8a,kBAAkB,QAAQ,sB;;;;;;;;;;;;;;;;ACAjd;AAShD;IALA;QAME,SAAI,GAAG,EAAE,CAAC;IAWZ,CAAC;IAVC,+BAAQ,GAAR;QAAA,iBASC;QARC,IAAM,MAAM,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC;QACxC,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,iBAAO;YACxC,OAAO,CAAC,GAAG,CAAC,iBAAiB,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;YAC9C,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACrC,KAAK,IAAI,CAAC,CAAC;YACX,KAAK,IAAI,EAAE,CAAC;YACZ,KAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IAXU,YAAY;QALxB,wEAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAYxB;IAAD,mBAAC;CAAA;AAZwB;;;;;;;;;;;;;;;;;;;ACTiC;AACjB;AAGM;AAa/C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAVrB,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY;aACb;YACD,OAAO,EAAE;gBACP,gFAAa;aACd;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;ACjBtB;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,8EAAc,EAAE,CAAC;AACnB,CAAC;AAED,yGAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/nils.lamot/Projects/AE/2017-google-cloud/moodboard-front/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".mood {\\n  color: white;\\n  font-size: 144px;\\n  font-weight: bold;\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  width: 100%;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-pack: center;\\n      -ms-flex-pack: center;\\n          justify-content: center; /* align horizontal */\\n  -webkit-box-align: center;\\n      -ms-flex-align: center;\\n          align-items: center; /* align vertical */\\n}\\n\\n.best {\\n  background-color: #01cc49;\\n}\\n.great {\\n  background-color: #5dcc7c;\\n}\\n.good {\\n  background-color: #86cc94;\\n}\\n.ok {\\n  background-color: #bdcb2b;\\n}\\n.poor {\\n  background-color: #cbc942;\\n}\\n.bad {\\n  background-color: #cb964c;\\n}\\n.very-bad {\\n  background-color: #cb7147;\\n}\\n.abysmal {\\n  background-color: #cb4138;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/nils.lamot/Projects/AE/2017-google-cloud/moodboard-front/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"mood\\\"\\n     [ngClass]=\\\"{\\n                    'best': mood >= 87.5,\\n                    'great': mood < 87.5 && mood >= 75,\\n                    'good': mood < 75 && mood >= 62.5,\\n                    'ok': mood < 62.5 && mood >= 50,\\n                    'poor': mood < 50 && mood >= 37.5,\\n                    'bad': mood < 37.5 && mood >= 25,\\n                    'very-bad': mood < 25 && mood >= 12.5,\\n                    'abysmal': mood < 12.5\\n  }\\\">\\n  <div>\\n  {{ mood }}%\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/nils.lamot/Projects/AE/2017-google-cloud/moodboard-front/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import {Component, OnInit} from '@angular/core';\n\ndeclare let EventSource: any;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  mood = 50;\n  ngOnInit(): void {\n    const source = new EventSource('/mood');\n    source.addEventListener('message', message => {\n      console.log('Received mood: ' + message.data);\n      let score = JSON.parse(message.data);\n      score += 1;\n      score *= 50;\n      this.mood = Math.round(score);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/nils.lamot/Projects/AE/2017-google-cloud/moodboard-front/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\n\nimport { AppComponent } from './app.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/nils.lamot/Projects/AE/2017-google-cloud/moodboard-front/src/app/app.module.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/nils.lamot/Projects/AE/2017-google-cloud/moodboard-front/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// /Users/nils.lamot/Projects/AE/2017-google-cloud/moodboard-front/src/main.ts"],"sourceRoot":"webpack:///"}